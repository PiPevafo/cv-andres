---
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import ListContainer from '../components/ListContainer.astro';
import ListElement from '../components/ListElement.astro';
import Tags from '../components/Tags.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../consts';
import { getCollection, getEntry, render } from 'astro:content';

const projects = await getCollection('projects');

const projectsByYear = projects.reduce((acc, project) => {
	const year = project.data.year;
	if (!acc[year]) {
		acc[year] = [];
	}
	acc[year].push(project);
	return acc;
}, {});

const title = `Projects - ${SITE_TITLE}`;
const projectsInfo = await getEntry('single', 'projects');
const { Content } = await projectsInfo!.render();
---

<!doctype html>
<html lang='en'>
	<head>
		<BaseHead title={title} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<main>
			<Content />

			<section>
				{
					Object.keys(projectsByYear)
						.sort()
						.reverse()
						.map((year) => (
							<div class='year-group' key={year}>
								<h2>{year}</h2>

								<ListContainer>
									{projectsByYear[year].map(
										async (project) => {
											const { Content } = await render(project);
											const tagList = project.data.tags || [];
											return (
												<ListElement
													key={project.data.slug}
													data={project.data}
													Content={Content}
												>
													<Tags tagList={tagList}></Tags>
												</ListElement>
											);
										},
									)}
								</ListContainer>
							</div>
						))
				}
			</section>
		</main>
		<Footer />
	</body>
</html>

<style>
	.year-group {
		margin-bottom: 1rem;
	}
	.year-group h2 {
		border-bottom: 1px solid var(--gray);
		padding-bottom: 0.3rem;
		font-size: 1em;
	}
</style>
